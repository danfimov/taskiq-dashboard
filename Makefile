args := $(wordlist 2, 100, $(MAKECMDGOALS))

.DEFAULT:
	@echo "No such command (or you pass two or many targets to ). List of possible commands: make help"

.DEFAULT_GOAL := help

##@ Local development

.PHONY: help
help: ## Show this help
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target> <arg=value>\033[0m\n"} /^[a-zA-Z_-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m  %s\033[0m\n\n", substr($$0, 5) } ' $(MAKEFILE_LIST)

.PHONY: run
run:  ## Run API part with hot reload
	@uvicorn taskiq_dashboard.api:get_app --factory --workers 1 --host 0.0.0.0 --port 80 --reload

.PHONY: run_docs
run_docs: ## Run documentation server
	@uv run mkdocs serve --livereload

.PHONY: run_infra
run_infra: ## Run rabbitmq in docker for integration tests
	@docker compose -f docker-compose.yml up -d

.PHONY: build
build:  ## Build docker image with tag "local"
	@docker build --progress=plain -t taskiq_dashboard:local .

.PHONY: migrate
migrate:  ## Migrate database
	@uv run python3 -m taskiq_dashboard.infrastructure.database.migrations upgrade head

.PHONY: revision
revision:  ## Create revision with autogenerated code
	@uv run python3 -m taskiq_dashboard.infrastructure.database.migrations revision --autogenerate --message $(args)

##@ Testing and formatting

.PHONY: lint
lint:  ## Run linters
	@ruff check .
	@mypy taskiq_dashboard

.PHONY: format
format:  ## Run formatters
	@ruff format .

.PHONY: test
test:  ## Run tests
	@pytest
