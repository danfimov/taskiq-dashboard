args := $(wordlist 2, 100, $(MAKECMDGOALS))

HELP_FUN = \
	%help; while(<>){push@{$$help{$$2//'options'}},[$$1,$$3] \
	if/^([\w-_]+)\s*:.*\#\#(?:@(\w+))?\s(.*)$$/}; \
	print"$$_:\n", map"  $$_->[0]".(" "x(20-length($$_->[0])))."$$_->[1]\n",\
	@{$$help{$$_}},"\n" for keys %help; \

ifndef args
MESSAGE = "No such command (or you pass two or many targets to ). List of possible commands: make help"
else
MESSAGE = "Done"
endif

.PHONY: help run migrate revision


help: ##@Help Show this help
	@echo -e "Usage: make [target] ...\n"
	@perl -e '$(HELP_FUN)' $(MAKEFILE_LIST)

run:  ##@Local Run API part with hot reload
	uvicorn taskiq_dashboard.api:get_app --factory --workers 1 --host 0.0.0.0 --port 80 --reload

migrate:  ##@Database Migrate database
	uv run python3 -m taskiq_dashboard.infrastructure.database.migrations upgrade head

revision:  ##@Database Create revision with autogenerated code
	uv run python3 -m taskiq_dashboard.infrastructure.database.migrations revision --autogenerate --message $(args)

build_local:  ##@Docker Build image with tag local (for local debugging)
	docker build --progress=plain -t taskiq_dashboard:local .

lint:  ##@Linters Run linting
	ruff check .
	mypy taskiq_dashboard

format:  ##@Formatters Run formatting
	ruff check . --fix --unsafe-fixes
